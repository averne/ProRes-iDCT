#version 450

layout(local_size_x = 8, local_size_y = 8) in;

layout(std430, binding = 0) buffer InputBuffer {
    float inbuf[8][8];
};

layout(std430, binding = 1) buffer OutputBuffer {
    float outbuf[8][8];
};

const float PI = 3.14159265359;
const float C0 = 1.0 / sqrt(8.0);
const float C = 0.5;

float idct(int x, float coeffs[8]) {
    float sum = 0.0;
    for (int u = 0; u < 8; ++u) {
        float Cu = (u == 0) ? C0 : C;
        sum += Cu * coeffs[u] * cos((PI * float(u) * (2.0 * float(x) + 1.0)) / 16.0);
    }
    return sum;
}

shared float temp[8][8];

void main() {
    float vec[8];
    ivec2 pos = ivec2(gl_LocalInvocationID);

    // Process rows
    for (int i = 0; i < 8; ++i)
        vec[i] = inbuf[pos.y][i];
    temp[pos.y][pos.x] = idct(pos.x, vec);

    // Synchronize waves
    barrier();

    // Process columns
    for (int i = 0; i < 8; ++i)
        vec[i] = temp[i][pos.x];
    outbuf[pos.y][pos.x] = idct(pos.y, vec);
}
